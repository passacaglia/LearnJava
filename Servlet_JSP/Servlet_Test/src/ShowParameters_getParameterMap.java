
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.*;
import java.util.Map.*;

//获取所有的参数

public class ShowParameters_getParameterMap extends HttpServlet {
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		response.setContentType("text/html");
		PrintWriter pw = response.getWriter();
		pw.println("<html> \n <head> \n" 
				+ "  <meta http-equiv=\"pragna\" content=\"no-cache\"></meta> \n"
				+ "  <title>Show Parameters</title> \n"
				+ " </head> \n"
				+ "<body> \n <table align=\"center\" border=\"1\"> \n"
				+ "  <tr bgcolor=#ff9966> \n " 
				+ "   <th>Parameter name  <th>Parameter value \n" 
				+ "  </tr>" );
		int c = 1;
		java.util.HashMap<String, String[]> parameters = (HashMap<String, String[]>) request.getParameterMap();
		Iterator ite = parameters.entrySet().iterator();
		while (ite.hasNext()) {
			Map.Entry me = (Map.Entry)ite.next();
			String s1 = (String)me.getKey();
			String[] str = (String[])me.getValue();

			pw.println(" <tr> \n  <td> ");
			pw.println(s1 + " </td> \n");
			if (1 == str.length) {
				if (str[0].length() == 0) {
					pw.println(" <td> No Value </td> \n");
				} else {
					pw.println(" <td> " + str[0] + " </td> \n");
				}
			} else {
				pw.println("<td> <ul> \n");
				for (int i=0; i<str.length; i++) {
					pw.println("<li> " + str[i] + "</li> \n");
				}
				pw.println("</ul> </td>\n");
			}
			pw.println(" </tr> \n");
			pw.println("");
		}
		
		
		pw.println("</table></body></html>");
		
	}

	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}
}




















































































































































































































































































































































































































































































































































































































